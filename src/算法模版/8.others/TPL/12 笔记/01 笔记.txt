注意运算符优先级 加括号
位运算优先级很低 建议加上括号
位运算通常只看>0 不看是否等于1

a/2 只有在编译器确认a>=0时才会优化成a>>1 否则会出错
a|1 代替a+1得看a是不是1是不是负数！

CPP 除0不报错 不输出任何东西

a[小][大]和a[大][小]在不同for方式下效率相差很大 通常建议前者

位运算 负数先转正数位运算完再转负数
负数补码原码转换 取反+1
正数原码补码转换 不变

lowbit x&(-x)
如果 x==lowbit(x) 那么 x是2的指数次

db &x 比 db x 更精确 引用比赋值精确

传参传数组的写法
ll (&a)[SZ][SZ] (严格等于SZ)
ll *a / ll a[] (SZ自己管理)(一维)
ll *a[SZ] / ll a[][SZ] (SZ自己管理)(二维)

set.upper_bound t
upper_bound(set.begin(),set.end(),x) f

set循环过程中增删会出错